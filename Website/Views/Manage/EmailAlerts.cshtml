@model PagedList.IPagedList<Admin.Models.EmailViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Email Alerts";
    Service.User.Manage manageObj = new Service.User.Manage();
    List<SelectListItem> actionList = (from x in manageObj.GetActionList()
                                       select new SelectListItem()
                                       {
                                           Text = x.Name,
                                           Value = x.Id.ToString(),
                                           Selected = (ViewBag.ActionId != null && x.Id == int.Parse(ViewBag.ActionId))
                                       }).ToList();

    List<SelectListItem> userList = new List<SelectListItem>();

    (from x in manageObj.GetAllUsers()
     select new SelectListItem()
     {
         Text = x.Phone,
         Value = x.Phone,
         Selected = (ViewBag.RelativeUser != null && x.Phone == ViewBag.RelativeUser)
     }).ToList();
    string optionLable = null;
    if (User.Identity.Name == Lib.Common.Variables.AdminUser)
    {
        optionLable = "---Select---";
        userList = (from x in manageObj.GetAllUsers()
                    select new SelectListItem()
                    {
                        Text = x.Phone,
                        Value = x.Phone,
                        Selected = (ViewBag.RelativeUser != null && x.Phone == ViewBag.RelativeUser)
                    }).ToList();
    }
    else
    {
        userList.Add(new SelectListItem
        {
            Text = User.Identity.Name,
            Value = User.Identity.Name,
            Selected = true
        });
    }

    if (ViewBag.FromDate.ToString().Length == 0)
    {
        ViewBag.FromDate = DateTime.Now.ToString("MM/dd/yyyy");
    }
    if (ViewBag.ToDate.ToString().Length == 0)
    {
        ViewBag.ToDate = DateTime.Now.ToString("MM/dd/yyyy");
    }
}

<h2>@ViewBag.Title</h2>
<h4>Search</h4>
<div style="width:900px">
    <table>
        <tr>
            <td>From Date: </td>
            <td>@Html.TextBox("datFromDate", null, new { @class = "datepicker", maxlength = 10, width = "100px" })</td>
            <td>To Date: </td>
            <td>@Html.TextBox("datToDate", null, new { @class = "datepicker", maxlength = 10, width = "100px" })</td>
            <td></td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.FirstOrDefault().ActionName): </td>
            <td>@Html.DropDownListFor(m => m.FirstOrDefault().ActionId, actionList, optionLable, new { id = "lstStatus", style = "width:174px" })</td>
            <td>@Html.DisplayNameFor(m => m.FirstOrDefault().RelativeUser): </td>
            <td>@Html.DropDownListFor(m => m.FirstOrDefault().RelativeUser, userList, optionLable, new { id = "lstUser", style = "width:174px" })</td>
            <td class="text-left">
                <input type="button" id="btnSearch" value="Search" class="btn btn-primary" />
            </td>
        </tr>
    </table>
    <hr />
    <table class="table">
        <tr>
            <th>
                Action
            </th>
            <th class="text-center">
                Noted Date
            </th>
            <th class="text-left">
                Title
            </th>
            <th class="text-left">
                Message
            </th>
            <th class="text-left">
                Relative User
            </th>
            <th class="text-left">
                Receiver Email
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ActionName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.NotedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    <a id="message_@item.Id" href="javascript:showMessage('message_@item.Id')">Show Message</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RelativeUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ToEmail)
                </td>
            </tr>
            <tr class="email-content">
                <td colspan="6">@Html.DisplayFor(modelItem => item.Message)</td>
            </tr>
        }
    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("emailalerts",
    new { page, currentFilter = ViewBag.CurrentFilter }))
</div>
<script>
    $(document).ready(function () {
        $(".datepicker").datepicker();
        $(".email-content").hide();
        //Set filters
        setInitialDates();
        //Events
        $("#btnSearch").click(function () {
            Util.Layout.showLoading(null);
            setInitialDates();
            var fromDate = $("#datFromDate").datepicker('getDate');
            fromDate = (fromDate.getMonth() + 1) + "/" + fromDate.getDate() + "/" + fromDate.getFullYear();
            var toDate = $("#datToDate").datepicker('getDate');
            toDate = (toDate.getMonth() + 1) + "/" + toDate.getDate() + "/" + toDate.getFullYear();
            var actionId = 0;
            if ($("#lstStatus").val().length > 0) {
                actionId = $("#lstStatus").val();
            }
            var userId = 0;
            if ($("#lstUser").val().length > 0) {
                userId = $("#lstUser").val();
            }
            var filterString = escape(actionId + "###" + fromDate + "###" + toDate + "###" + userId);
            document.location = "emailalerts?currentFilter=" + filterString + "&page=1";
        });
    });
    function showMessage(id) {
        $("#" + id).closest("tr").next().toggle();
        if ($("#" + id).closest("tr").next().css("display") == "none") {
            $("#" + id).text("Show Message");
        } else {
            $("#" + id).text("Hide Message");
        }
    }
    function setInitialDates() {
        //Set filters
        if ($("#datFromDate").val().trim().length == 0) {
            $("#datFromDate").datepicker('setDate', '@ViewBag.FromDate');
        }
        if ($("#datToDate").val().trim().length == 0) {
            $("#datToDate").datepicker('setDate', '@ViewBag.ToDate');
        }
    }
</script>